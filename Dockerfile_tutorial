#
FROM centos:latest
MAINTAINER Boyuan (Keven) Guan <bguan@fiu.edu>
# 
RUN curl -SL https://ral.ucar.edu/sites/default/files/public/projects/ncar-docker-wrf/ucar-bsd-3-clause-license.pdf > /UCAR-BSD-3-Clause-License.pdf
#
ENV WRF_VERSION 4.0.3
ENV WPS_VERSION 4.0.2
ENV NML_VERSION 4.0.2#
# Tutorial build: demo data only when argname=tutorial
#FROM centos:latest - some users reported problems with yum
FROM centos:7
MAINTAINER Dave Gill <gill@ucar.edu>

ENV WRF_VERSION   4.0.3
ENV WPS_VERSION   4.0.2
ENV NML_VERSION   4.0.2

# Set up base OS environment
RUN sed -i 's|^mirrorlist=|#mirrorlist=|g' /etc/yum.repos.d/CentOS-Base.repo && \
    sed -i 's|^#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-Base.repo && \
    yum -y update

RUN yum -y install \
      scl file gcc gcc-gfortran gcc-c glibc.i686 libgcc.i686 libpng-devel jasper \
      jasper-devel hostname m4 make perl tar bash tcsh time wget which zlib zlib-devel \
      openssh-clients openssh-server net-tools fontconfig libgfortran libXext libXrender \
      ImageMagick sudo epel-release git

# Newer GNU toolchain, skip the broken sclo-sclo repo
RUN yum -y install centos-release-scl && \
    rm -f /etc/yum.repos.d/CentOS-SCLo-sclo.repo && \
    for f in /etc/yum.repos.d/CentOS-SCLo-*.repo; do \
      [ -f "$f" ] && \
      sed -i 's|^mirrorlist=|#mirrorlist=|g' "$f" && \
      sed -i 's|^#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' "$f" && \
      sed -i 's|^baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' "$f"; \
    done && \
    yum --disablerepo=centos-sclo-sclo -y install \
      devtoolset-8 devtoolset-8-gcc devtoolset-8-gcc-gfortran devtoolset-8-gcc-c && \
    yum clean all

# Create wrf user and workspace
RUN groupadd wrf -g 9999 && \
    useradd -u 9999 -g wrf -G wheel -M -d /wrf wrfuser
RUN mkdir /wrf && chown -R wrfuser:wrf /wrf && chmod 6755 /wrf

# Parallel builds
ENV J 4

# Build OpenMPI under devtoolset-8
RUN mkdir -p /wrf/libs/openmpi/BUILD_DIR && \
    scl enable devtoolset-8 -- bash -c "\
      cd /wrf/libs/openmpi/BUILD_DIR && \
      curl -L -O https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.0.tar.gz && \
      tar -xzf openmpi-4.0.0.tar.gz && \
      cd openmpi-4.0.0 && \
      ./configure --prefix=/usr/local && \
      make -j${J} && make install" && \
    rm -rf /wrf/libs/openmpi/BUILD_DIR

# Set up netCDF-from-source
ENV NETCDF=/wrf/libs/netcdf
ENV PATH=${NETCDF}/bin:$PATH

RUN mkdir -p ${NETCDF}/BUILD_DIR && \
    curl -L -o ${NETCDF}/BUILD_DIR/netcdf-c-4.6.2.tar.gz \
      https://github.com/Unidata/netcdf-c/archive/v4.6.2.tar.gz && \
    curl -L -o ${NETCDF}/BUILD_DIR/netcdf-fortran-4.4.5.tar.gz \
      https://github.com/Unidata/netcdf-fortran/archive/v4.4.5.tar.gz

RUN scl enable devtoolset-8 -- bash -c "\
      cd ${NETCDF}/BUILD_DIR && \
      tar -xzf netcdf-c-4.6.2.tar.gz && \
      tar -xzf netcdf-fortran-4.4.5.tar.gz && \
      cd netcdf-c-4.6.2 && ./configure --prefix=${NETCDF} && make -j${J} && make install && \
      cd ../netcdf-fortran-4.4.5 && ./configure --prefix=${NETCDF} && make -j${J} && make install" && \
    rm -rf ${NETCDF}/BUILD_DIR

# Switch to wrfuser for downloading data
USER wrfuser
WORKDIR /wrf

ARG argname=tutorial
RUN echo "Building case: $argname"

# Geography data
RUN if [ "$argname" = "tutorial" ] ; then \
      curl -SL --fail http://www2.mmm.ucar.edu/wrf/src/wps_files/geog_low_res_mandatory.tar.gz \
        | tar -xzC /wrf/WPS_GEOG ; \
    fi

# Colorado demo inputs
RUN if [ "$argname" = "tutorial" ] ; then \
      if curl -SL --head --fail http://www2.mmm.ucar.edu/wrf/TUTORIAL_DATA/colorado_march16.new.tar.gz ; then \
        curl -SL http://www2.mmm.ucar.edu/wrf/TUTORIAL_DATA/colorado_march16.new.tar.gz \
          | tar -xzC /wrf/wrfinput ; \
      fi; \
    fi

# WRF namelists
RUN if [ "$argname" = "tutorial" ] ; then \
      curl -SL --fail http://www2.mmm.ucar.edu/wrf/src/namelists_v${NML_VERSION}.tar.gz \
        | tar -xzC /wrf/wrfinput ; \
    fi

# WRF_NCL scripts
RUN if [ "$argname" = "tutorial" ] ; then \
      curl -SL --fail http://www2.mmm.ucar.edu/wrf/TUTORIAL_DATA/WRF_NCL_scripts.tar.gz \
        | tar -xzC /wrf ; \
    fi

# Extra small demo data & scripts
RUN if [ "$argname" = "tutorial" ] ; then \
      curl -SL --fail http://www2.mmm.ucar.edu/wrf/dave/DATA/Data_small/data_SMALL.tar.gz \
        | tar -xzC /wrf && \
      curl -SL --fail http://www2.mmm.ucar.edu/wrf/dave/nml.tar.gz \
        | tar -xzC /wrf && \
      curl -SL --fail http://www2.mmm.ucar.edu/wrf/dave/script.tar \
        | tar -xzC /wrf ; \
    fi

# Final environment settings
ENV JASPERINC      /usr/include/jasper
ENV JASPERLIB      /usr/lib64
ENV NETCDF_classic 1
ENV LD_LIBRARY_PATH /opt/rh/devtoolset-8/root/usr/lib/gcc/x86_64-redhat-linux/8:/usr/lib64/openmpi/lib:${NETCDF}/lib:${LD_LIBRARY_PATH}
ENV PATH            .:/opt/rh/devtoolset-8/root/usr/bin:/usr/lib64/openmpi/bin:${NETCDF}/bin:$PATH

# SSH setup for wrfuser
RUN ssh-keygen -f /wrf/.ssh/id_rsa -t rsa -N '' && \
    chmod 600 /wrf/.ssh/config && \
    chmod 700 /wrf/.ssh && \
    cp /wrf/.ssh/id_rsa.pub /wrf/.ssh/authorized_keys

VOLUME /wrf
CMD ["/bin/tcsh"]
#

#
# Set up base OS environment
#
RUN yum -y update
RUN yum -y install file gcc gcc-gfortran gcc-c++ glibc.i686 libgcc.i686 libpng-devel jasper \
  jasper-devel hostname m4 make perl tar bash tcsh time wget which zlib zlib-devel \
  openssh-clients openssh-server net-tools fontconfig libgfortran libXext libXrender ImageMagick sudo epel-release
#
# now get 3rd party EPEL builds of netcdf and openmpi dependencies
RUN yum -y install netcdf-openmpi-devel.x86_64 netcdf-fortran-openmpi-devel.x86_64 \
    netcdf-fortran-openmpi.x86_64 hdf5-openmpi.x86_64 openmpi.x86_64 openmpi-devel.x86_64 \
   && yum clean all
#
RUN mkdir -p /var/run/sshd \
    && ssh-keygen -A \
    && sed -i 's/#PermitRootLogin yes/PermitRootLogin yes/g' /etc/ssh/sshd_config \
    && sed -i 's/#RSAAuthentication yes/RSAAuthentication yes/g' /etc/ssh/sshd_config \
    && sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/g' /etc/ssh/sshd_config
#
RUN groupadd wrf -g 9999
RUN useradd -u 9999 -g wrf -G wheel -M -d /wrf wrfuser
#

RUN mkdir /wrf \
 &&  chown -R wrfuser:wrf /wrf \
 &&  chmod 6755 /wrf

RUN mkdir -p  /wrf/WPS_GEOG /wrf/wrfinput /wrf/wrfoutput \
 &&  chown -R wrfuser:wrf /wrf /wrf/WPS_GEOG /wrf/wrfinput /wrf/wrfoutput /usr/local \
 &&  chmod 6755 /wrf /wrf/WPS_GEOG /wrf/wrfinput /wrf/wrfoutput /usr/local

# Set environment for interactive container shells
#
RUN echo export LDFLAGS="-lm" >> /etc/bashrc \
 && echo export NETCDF=/wrf/netcdf_links >> /etc/bashrc \
 && echo export JASPERINC=/usr/include/jasper/ >> /etc/bashrc \
 && echo export JASPERLIB=/usr/lib64/ >> /etc/bashrc \
 && echo export LD_LIBRARY_PATH="/usr/lib64/openmpi/lib" >> /etc/bashrc \
 && echo export PATH=".:/usr/lib64/openmpi/bin:$PATH" >> /etc/bashrc \
 && echo setenv LDFLAGS "-lm" >> /etc/csh.cshrc \
 && echo setenv NETCDF "/wrf/netcdf_links" >> /etc/csh.cshrc \
 && echo setenv JASPERINC "/usr/include/jasper/" >> /etc/csh.cshrc \
 && echo setenv JASPERLIB "/usr/lib64/" >> /etc/csh.cshrc \
 && echo setenv LD_LIBRARY_PATH "/usr/lib64/openmpi/lib" >> /etc/csh.cshrc \
 && echo setenv PATH ".:/usr/lib64/openmpi/bin:$PATH" >> /etc/csh.cshrc
#
#
RUN mkdir /wrf/.ssh ; echo "StrictHostKeyChecking no" > /wrf/.ssh/config
COPY default-mca-params.conf /wrf/.openmpi/mca-params.conf
RUN mkdir -p /wrf/.openmpi
RUN chown -R wrfuser:wrf /wrf/
# RUN echo "root    ALL=(ALL)     ALL" >> /etc/sudoers
#
#
# all root steps completed above, now below as regular userID wrfuser
USER wrfuser
WORKDIR /wrf
#
#
RUN curl -SL http://www2.mmm.ucar.edu/wrf/src/wps_files/geog_low_res_mandatory.tar.gz | tar -xzC /wrf/WPS_GEOG
#
RUN curl -SL http://www2.mmm.ucar.edu/wrf/TUTORIAL_DATA/colorado_march16.new.tar.gz | tar -xzC /wrf/wrfinput
#
RUN curl -SL http://www2.mmm.ucar.edu/wrf/src/namelists_v$NML_VERSION.tar.gz  | tar -xzC /wrf/wrfinput
#
RUN curl -SL http://www2.mmm.ucar.edu/wrf/TUTORIAL_DATA/WRF_NCL_scripts.tar.gz | tar -xzC /wrf
#
# Download NCL
#
RUN curl -SL https://ral.ucar.edu/sites/default/files/public/projects/ncar-docker-wrf/nclncarg-6.3.0.linuxcentos7.0x8664nodapgcc482.tar.gz | tar zxC /usr/local
ENV NCARG_ROOT /usr/local
#
#
# Download wrf and wps source, Version 4.0 and later
RUN curl -SL https://github.com/wrf-model/WPS/archive/v$WPS_VERSION.tar.gz | tar zxC /wrf \
 && curl -SL https://github.com/wrf-model/WRF/archive/v$WRF_VERSION.tar.gz | tar zxC /wrf
RUN mv /wrf/WPS-$WPS_VERSION /wrf/WPS
RUN mv /wrf/WRF-$WRF_VERSION /wrf/WRF
ENV NETCDF_classic 1
#
# 
 RUN mkdir netcdf_links \
  && ln -sf /usr/include/openmpi-x86_64/ netcdf_links/include \
  && ln -sf /usr/lib64/openmpi/lib netcdf_links/lib \
  && export NETCDF=/wrf/netcdf_links \
  && export JASPERINC=/usr/include/jasper/ \
  && export JASPERLIB=/usr/lib64/ 

ENV LD_LIBRARY_PATH /usr/lib64/openmpi/lib
ENV PATH  /usr/lib64/openmpi/bin:$PATH
#
#
RUN ssh-keygen -f /wrf/.ssh/id_rsa -t rsa -N '' \
    && chmod 600 /wrf/.ssh/config \
    && chmod 700 /wrf/.ssh \
    && cp /wrf/.ssh/id_rsa.pub /wrf/.ssh/authorized_keys
#
#
VOLUME /wrf
CMD ["/bin/tcsh"]
#
